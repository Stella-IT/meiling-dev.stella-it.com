{"version":3,"sources":["components/atoms/Btn/index.tsx","components/atoms/Progress/index.tsx","components/atoms/TextField/index.tsx","components/atoms/Caption/index.tsx","components/atoms/TextLink/index.tsx","components/molecules/BtnRowWrapper/index.tsx","components/molecules/TextFieldWrapper/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Btn","children","styleType","to","href","grow","disabled","props","classes","push","className","join","Progress","value","max","Input","type","placeholder","onChange","caption","TextLink","center","BtnRowWrapper","position","React","Children","count","TextFieldWrapper","status","width","e","console","log","target","App","map","n","i","toLowerCase","onClick","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c51ea36c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Btn.scss';\n\ninterface Props {\n  children?: React.ReactNode\n  styleType?: \"primary\" | \"secondary\" | \"tertiary\";\n\n  to?: string;\n  href?: string;\n  onClick?: () => void;\n\n  grow?: boolean;\n  disabled?: boolean;\n}\n\nconst Btn: React.FC<Props> = ({\n  children,\n  styleType = \"primary\",\n  to,\n  href,\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [ styleType ];\n  if (grow) classes.push(\"grow\");\n\n  if (disabled) {\n    classes.push(\"button disabled\");\n    return (<span className={classes.join(\" \")} {...props}>\n      {children}\n    </span>)\n  }\n  if (to) {\n    classes.push(\"button\");\n    return (<Link to={to} className={classes.join(\" \")} {...props}>\n      {children}\n    </Link>);\n  }\n  if (href) {\n    classes.push(\"button\");\n    return (<a href={href} className={classes.join(\" \")} {...props}>\n      {children}\n    </a>);\n  }\n  return (<button className={classes.join(\" \")} {...props}>\n    {children}\n  </button>);\n}\n\nexport default Btn;\n","import React from 'react';\nimport './Progress.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  value?: number;\n  max?: number;\n\n  grow?: boolean;\n  disabled?: boolean;\n};\n\nconst Progress: React.FC<Props> = ({\n  children,\n\n  value,\n  max,\n\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [];\n  if (grow) classes.push(\"grow\");\n  if (disabled) classes.push(\"disabled\");\n\n  return (\n    <progress className={classes.join(\" \")} value={value} max={max}>{children}</progress>\n  )\n}\n\nexport default Progress;\n","import React from 'react';\nimport './TextField.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  type: \"text\" | \"number\" | \"email\" | \"password\";\n  placeholder?: string,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => any;\n\n  grow?: boolean;\n  disabled?: boolean;\n};\n\nconst Input: React.FC<Props> = ({\n  children,\n\n  type,\n  placeholder = \"\",\n  onChange,\n\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [];\n  if (grow) classes.push(\"grow\");\n  if (disabled) classes.push(\"disabled\");\n\n  return (\n    <input className={classes.join(\" \")} type={type} onChange={onChange} placeholder={placeholder} {...props} />\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport './Caption.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  grow?: boolean;\n}\n\nconst caption: React.FC<Props> = ({\n  children,\n\n  grow\n}) => {\n  const classes: string[] = [\"caption\"];\n  if (grow) classes.push(\"grow\");\n\n  return (<p className={classes.join(\" \")}>{children}</p>);\n};\n\nexport default caption;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './TextLink.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  to?: string;\n  href?: string;\n\n  center?: boolean;\n}\n\nconst TextLink: React.FC<Props> = ({\n  children,\n\n  to,\n  href,\n\n  center = false,\n  ...props\n}) => {\n  if (to)\n    return (<Link to={to} className=\"textlink\" {...props}>\n      {children}\n    </Link>);\n  \n  return (<a href={href} className=\"textlink\" {...props}>\n    {children}\n  </a>);\n};\n\nexport default TextLink;\n","import React from 'react';\nimport './BtnRowWrapper.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  position?: \"left\" | \"center\" | \"right\";\n}\n\nconst BtnRowWrapper: React.FC<Props> = ({\n  children,\n  position = \"center\",\n  ...props\n}) => {\n  const classes: string[] = [ \"btn_row_wrapper\" ];\n  if (React.Children.count(children) <= 1)\n    classes.push(position);\n\n  return (<div className={classes.join(\" \")} {...props}>\n    {children}\n  </div>)\n}\n\nexport default BtnRowWrapper;\n","import React from 'react';\nimport TextField from './../../atoms/TextField';\nimport Caption from './../../atoms/Caption';\nimport './TextFieldWrapper.scss';\n\ninterface Props {\n  type?: \"text\" | \"number\" | \"email\" | \"password\";\n  status?: \"normal\" | \"positive\" | \"warning\" | \"negative\";\n  width?: \"half\" | \"full\"; \n\n  caption?: string;\n}\n\nconst TextFieldWrapper: React.FC<Props> = ({\n  type = \"text\",\n  status = \"normal\",\n  width = \"full\",\n  caption = \"\",\n  ...props\n}) => {\n  return (<div className={`textfield_wrapper ${status} ${width}`} {...props}>\n    <TextField grow type={type} onChange={e => {console.log(e.target.value)}} />\n    <Caption>{caption}</Caption>\n  </div>);\n}\n\nexport default TextFieldWrapper;\n","import React from 'react';\nimport './style/_reset.scss';\nimport './style/_config.scss';\n\nimport Btn from './components/atoms/Btn';\nimport Progress from './components/atoms/Progress';\nimport Input from './components/atoms/TextField';\nimport Caption from './components/atoms/Caption';\nimport TextLink from './components/atoms/TextLink';\nimport BtnRowWrapper from './components/molecules/BtnRowWrapper';\nimport TextFieldWrapper from './components/molecules/TextFieldWrapper';\n\n/**\n * \n      {[\"Primary\", \"Secondary\", \"Tertiary\"].map(n => <Btn href=\"/\" styleType={n.toLowerCase() as any}>{n} Button Here</Btn>)}<br />\n      {[\"Primary\", \"Secondary\", \"Tertiary\"].map(n => <Btn disabled href=\"/\" styleType={n.toLowerCase() as any}>{n} Button Here</Btn>)}<br />\n      <Btn grow onClick={() => console.log(\"Dummy\")} disabled>asdf</Btn>\n      <Progress max={100} value={50} grow />\n */\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        {[\"Primary\", \"Secondary\", \"Tertiary\"].map((n, i) => <Btn key={i} href=\"/\" styleType={n.toLowerCase() as any}>{n} Button Here</Btn>)}<br />\n      </div>\n      <div>\n        {[\"Primary\", \"Secondary\", \"Tertiary\"].map((n, i) => <Btn key={i} href=\"/\" styleType={n.toLowerCase() as any} disabled>{n} Button Here</Btn>)}<br />\n      </div>\n      <Btn grow onClick={() => console.log(\"Dummy\")} disabled>asdf</Btn>\n      <Progress max={100} value={13} grow />\n      <Progress max={100} value={72} grow disabled />\n      <Input type=\"email\" onChange={(a) => {console.log(a.target.value)}} placeholder=\"anggggg\" />\n      <Input type=\"email\" onChange={(a) => {console.log(a.target.value)}} grow />\n      <Caption>Caption here.</Caption>\n      <TextLink href=\"#\">TextLink here.</TextLink>\n      <BtnRowWrapper position=\"center\">\n        <Btn>Hello!</Btn>\n      </BtnRowWrapper>\n      <TextFieldWrapper width=\"half\" status=\"positive\" caption=\"Caption Here\">\n      </TextFieldWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}