{"version":3,"sources":["components/atoms/Btn/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Btn","children","styleType","to","href","grow","disabled","props","classes","push","className","join","App","map","n","toLowerCase","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAmDeA,G,MAnCc,SAAC,GAQvB,IAPLC,EAOI,EAPJA,SAOI,IANJC,iBAMI,MANQ,UAMR,EALJC,EAKI,EALJA,GACAC,EAII,EAJJA,KAII,IAHJC,YAGI,aAFJC,gBAEI,SADDC,EACC,sEACEC,EAAoB,CAAEN,GAG5B,OAFIG,GAAMG,EAAQC,KAAK,QAEnBH,GACFE,EAAQC,KAAK,mBACL,8CAAMC,UAAWF,EAAQG,KAAK,MAAUJ,GAAxC,aACLN,MAGDE,GACFK,EAAQC,KAAK,UACL,cAAC,IAAD,yBAAMN,GAAIA,EAAIO,UAAWF,EAAQG,KAAK,MAAUJ,GAAhD,aACLN,MAGDG,GACFI,EAAQC,KAAK,UACL,2CAAGL,KAAMA,EAAMM,UAAWF,EAAQG,KAAK,MAAUJ,GAAjD,aACLN,MAGG,gDAAQS,UAAWF,EAAQG,KAAK,MAAUJ,GAA1C,aACLN,OC/BUW,MAVf,WACE,OACE,sBAAKF,UAAU,MAAf,UACG,CAAC,UAAW,YAAa,YAAYG,KAAI,SAAAC,GAAC,OAAI,eAAC,EAAD,CAAKV,KAAK,IAAIF,UAAWY,EAAEC,cAA3B,UAAkDD,EAAlD,qBAAwE,uBACtH,CAAC,UAAW,YAAa,YAAYD,KAAI,SAAAC,GAAC,OAAI,eAAC,EAAD,CAAKR,UAAQ,EAACF,KAAK,IAAIF,UAAWY,EAAEC,cAApC,UAA2DD,EAA3D,qBAAiF,uBAChI,cAAC,EAAD,CAAKT,MAAI,EAACW,QAAS,kBAAMC,QAAQC,IAAI,UAAUZ,UAAQ,EAAvD,sBCGSa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77c6ac66.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Btn.scss';\n\ninterface Props {\n  children?: React.ReactNode | string;\n  styleType?: \"primary\" | \"secondary\" | \"tertiary\";\n\n  to?: string;\n  href?: string;\n  onClick?: () => void;\n\n  grow?: boolean;\n  disabled?: boolean;\n}\n\nconst Btn: React.FC<Props> = ({\n  children,\n  styleType = \"primary\",\n  to,\n  href,\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [ styleType ];\n  if (grow) classes.push(\"grow\");\n\n  if (disabled) {\n    classes.push(\"button disabled\");\n    return (<span className={classes.join(\" \")} {...props}>\n      {children}\n    </span>)\n  }\n  if (to) {\n    classes.push(\"button\");\n    return (<Link to={to} className={classes.join(\" \")} {...props}>\n      {children}\n    </Link>);\n  }\n  if (href) {\n    classes.push(\"button\");\n    return (<a href={href} className={classes.join(\" \")} {...props}>\n      {children}\n    </a>);\n  }\n  return (<button className={classes.join(\" \")} {...props}>\n    {children}\n  </button>);\n}\n\nexport default Btn;\n","import React from 'react';\nimport './style/_reset.scss';\nimport './style/_config.scss';\n\nimport Btn from './components/atoms/Btn';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {[\"Primary\", \"Secondary\", \"Tertiary\"].map(n => <Btn href=\"/\" styleType={n.toLowerCase() as any}>{n} Button Here</Btn>)}<br />\n      {[\"Primary\", \"Secondary\", \"Tertiary\"].map(n => <Btn disabled href=\"/\" styleType={n.toLowerCase() as any}>{n} Button Here</Btn>)}<br />\n      <Btn grow onClick={() => console.log(\"Dummy\")} disabled>asdf</Btn>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}