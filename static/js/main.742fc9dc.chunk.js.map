{"version":3,"sources":["common/interface/error.ts","components/atoms/LogoImg/index.tsx","components/atoms/Progress/index.tsx","components/molecules/BtnRowWrapper/index.tsx","components/templates/ContentWrapper/index.tsx","components/atoms/TextField/index.tsx","components/atoms/Caption/index.tsx","components/molecules/TextFieldWrapper/index.tsx","components/atoms/TextLink/index.tsx","components/atoms/Btn/index.tsx","common/index.ts","common/error.ts","components/pages/SignIn/index.tsx","common/interface/auth.ts","components/pages/SignOut/index.tsx","components/atoms/SocialBtn/index.tsx","components/molecules/SocialBtnsGroup/index.tsx","components/pages/SocialSignIn/index.tsx","components/atoms/ProfileImg/index.tsx","components/molecules/ProfileInfo/index.tsx","components/pages/Password/index.tsx","components/pages/Index/index.tsx","components/pages/TestMode/index.tsx","components/pages/Users/index.tsx","components/pages/UserInfo/index.tsx","common/auth.ts","components/pages/TwoFactor/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MeilingV1ErrorType","LogoImg","id","Progress","children","value","max","grow","disabled","classes","push","percentage","undefined","progressBarLabel","toPrecision","className","join","aria-label","BtnRowWrapper","position","props","React","Children","count","ContentWrapper","pageName","progressValue","progressDisabled","content","buttonsBottom","buttonsBottomPosition","progress","Buttons","TextField","type","placeholder","onChange","onEnter","autoComplete","readonly","onKeyPress","e","shiftKey","key","caption","TextFieldWrapper","status","width","TextLink","to","href","center","Btn","styleType","isSquare","server","tokenItemName","getMeilingSessionToken","a","token","localStorage","getItem","axios","get","headers","data","success","setItem","removeItem","isUsernameAvailable","username","post","signInWithUsernameAndPassword","password","getLoggedInUser","user_id","Error","getLoggedInUsers","getExtendedAuthenticationMethods","context","methods","getExtendedAuthenticationChallenge","method","challenge","signout","uuid","parseQueryUrl","url","searchQueries","split","result","splitedQueries","parsed","name","parseMeilingV1ErrorResponse","response","getMessageFromMeilingV1Error","ALREADY_SIGNED_IN","ALREADY_SIGNED_OUT","AUTHENTICATION_NOT_CURRENT_CHALLENGE_METHOD","AUTHENTICATION_REQUEST_NOT_GENERATED","AUTHENTICATION_TIMEOUT","INVALID_REQUEST","INVALID_SESSION","INVALID_SIGNIN_METHOD","INVALID_SIGNIN_TYPE","MORE_THAN_ONE_USER_MATCHED","NOT_IMPLMENETED","SIGNIN_FAILED","TWO_FACTOR_AUTHENTICATION_REQUEST_NOT_GENERATED","TWO_FACTOR_AUTHENTICATION_REQUIRED","UNAUTHORIZED","UNSUPPORTED_SIGNIN_METHOD","WRONG_PASSWORD","WRONG_USERNAME","description","MeilingV1SigninType","MeilingV1ExtendedAuthMethods","SignIn","history","location","useState","setUsername","userId","message","textFieldStatus","setTextFieldStatus","checkUserId","query","state","profileUrl","pathname","search","target","onClick","SignOut","loaded","error","loadState","setLoadState","useEffect","redirectTo","parsedData","uuidData","find","n","redirectData","window","SocialBtn","platform","SocialBtnsGroup","SocialSignIn","ProfileImg","alt","src","size","ProfileInfo","msg","Password","setPassword","checkPassword","redirectUri","readOnly","Index","loggedIn","commsFailed","length","TestMode","localToken","alert","confirm","navigator","clipboard","writeText","Users","users","map","user","UserInfo","match","params","createdAt","lastSignIn","lastAuthenticated","getMessageFromAuthenticationMethod","EMAIL","OTP","PGP_SIGNATURE","SECURITY_KEY","SMS","TwoFactor","authMethod","setAuthMethod","TWO_FACTOR_AUTH","App","darkThemeMediaQuery","matchMedia","isDarkMode","matches","theme","setTheme","addEventListener","document","body","classList","remove","add","render","console","log","TransitionGroup","CSSTransition","timeout","classNames","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.742fc9dc.chunk.js","sourcesContent":["export enum MeilingV1ErrorType {\n  UNAUTHORIZED = 'unauthorized',\n  ALREADY_SIGNED_IN = 'already_signed_in',\n  ALREADY_SIGNED_OUT = 'already_signed_out',\n  INVALID_REQUEST = 'invalid_request',\n  INVALID_SESSION = 'invalid_session',\n  WRONG_USERNAME = 'wrong_username',\n  WRONG_PASSWORD = 'wrong_password',\n  INVALID_SIGNIN_TYPE = 'invalid_signin_type',\n  INVALID_SIGNIN_METHOD = 'invalid_signin_method',\n  SIGNIN_FAILED = 'signin_failed',\n  UNSUPPORTED_SIGNIN_METHOD = 'unsupported_signin_method',\n  TWO_FACTOR_AUTHENTICATION_REQUIRED = 'two_factor_authentication_required',\n  TWO_FACTOR_AUTHENTICATION_REQUEST_NOT_GENERATED = 'two_factor_authentication_request_not_generated',\n  MORE_THAN_ONE_USER_MATCHED = 'more_than_one_user_matched',\n  AUTHENTICATION_REQUEST_NOT_GENERATED = 'authentication_request_not_generated',\n  AUTHENTICATION_NOT_CURRENT_CHALLENGE_METHOD = 'authentication_not_current_challenge_method',\n  AUTHENTICATION_TIMEOUT = 'authentication_timeout',\n  NOT_IMPLMENETED = 'not_implemented',\n}\n\nexport interface MeilingV1ErrorResponse {\n  type: MeilingV1ErrorType;\n  description: string;\n  code: string;\n  url: string;\n}","import React from 'react';\nimport './LogoImg.scss';\n\nconst LogoImg: React.FC = () => {\n  return (\n    <div id=\"logo_wrapper\">\n      <div id=\"logo\" />\n    </div>\n  );\n};\n\nexport default LogoImg;\n","import React from 'react';\nimport './Progress.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  value?: number;\n  max?: number;\n\n  grow?: boolean;\n  disabled?: boolean;\n};\n\nconst localizedProgressString = \"진행 완료.\";\nconst localizedDisabledString = \"비활성화됨.\";\n\nconst Progress: React.FC<Props> = ({\n  children,\n\n  value,\n  max,\n\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [];\n  if (grow) classes.push(\"grow\");\n  if (disabled) classes.push(\"disabled\");\n\n  let percentage = undefined;\n  if (value !== undefined && max !== undefined) percentage = 100 * (value / max);\n  \n  const progressBarLabel = \"\"\n    + ((percentage !== undefined) ? percentage.toPrecision(2) + \"% \"+localizedProgressString : \"\")\n    + ((disabled) ? \" \"+localizedDisabledString : \"\");\n\n  return (\n    <progress className={classes.join(\" \")} value={value} max={max} aria-label={progressBarLabel}>{progressBarLabel} {children}</progress>\n  )\n}\n\nexport default Progress;\n","import React from 'react';\nimport './BtnRowWrapper.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  position?: \"left\" | \"center\" | \"right\";\n}\n\nconst BtnRowWrapper: React.FC<Props> = ({\n  children,\n  position = \"center\",\n  ...props\n}) => {\n  const classes: string[] = [ \"btn_row_wrapper\" ];\n  if (React.Children.count(children) <= 1)\n    classes.push(position);\n\n  return (<div className={classes.join(\" \")} {...props}>\n    {children}\n  </div>)\n}\n\nexport default BtnRowWrapper;\n","import React from 'react';\nimport Progress from '../../atoms/Progress';\nimport BtnRowWrapper from '../../molecules/BtnRowWrapper';\nimport './ContentWrapper.scss';\n\ninterface Props {\n  pageName?: string;\n  progressValue?: number;\n  progressDisabled?: boolean;\n  content?: React.ReactNode;\n  buttonsBottom?: React.ReactNode;\n  buttonsBottomPosition?: \"left\" | \"center\" | \"right\";\n}\n\nconst ContentWrapper: React.FC<Props> = ({\n  pageName = \"\",\n  progressValue,\n  progressDisabled = false,\n  content,\n  buttonsBottom,\n  buttonsBottomPosition = \"center\"\n}) => {\n  const classes: string[] = [];\n  if (progressValue) classes.push(\"progress\");\n\n  const progress: React.ReactNode = (progressValue !== undefined) ?\n    <Progress value={progressValue} max={100} disabled={progressDisabled} grow/> :\n    <></> \n  const Buttons: React.ReactNode = (buttonsBottom !== undefined) ? buttonsBottom : <div></div>;\n\n  return (\n    <div id=\"wrapper\">\n      <div id=\"content_wrapper\" className={classes.join(\" \")}>\n        {progress}\n        <div id=\"content\" className={pageName}>\n          {content}\n        </div>\n      </div>\n      <BtnRowWrapper position={buttonsBottomPosition}>\n        {Buttons}\n      </BtnRowWrapper>\n    </div>\n  );\n}\n\nexport default ContentWrapper;\n","import React from 'react';\nimport './TextField.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  type: \"text\" | \"number\" | \"email\" | \"password\";\n  placeholder?: string,\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => any;\n  onEnter?: () => any;\n  autoComplete?: string;\n\n  readonly?: boolean;\n  grow?: boolean;\n  disabled?: boolean;\n};\n\nconst TextField: React.FC<Props> = ({\n  children,\n\n  type,\n  placeholder = \"\",\n  onChange,\n  onEnter,\n  autoComplete,\n\n  readonly = false,\n  grow = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [];\n  if (grow) classes.push(\"grow\");\n\n  return (\n    <input\n      className={classes.join(\" \")}\n      type={type}\n      onChange={onChange}\n      onKeyPress={\n        (e) => {\n          if (!e.shiftKey && e.key === \"Enter\") {\n            if (onEnter) onEnter();\n          }\n        }\n      }\n      placeholder={placeholder}\n      autoComplete={autoComplete}\n\n      {...readonly}\n      {...disabled}\n      {...props}\n    />\n  )\n}\n\nexport default TextField;\n","import React from 'react';\nimport './Caption.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  grow?: boolean;\n}\n\nconst caption: React.FC<Props> = ({\n  children,\n\n  grow\n}) => {\n  const classes: string[] = [\"caption\"];\n  if (grow) classes.push(\"grow\");\n\n  return (<p className={classes.join(\" \")}>{children}</p>);\n};\n\nexport default caption;\n","import React from 'react';\nimport TextField from './../../atoms/TextField';\nimport Caption from './../../atoms/Caption';\nimport './TextFieldWrapper.scss';\n\ninterface Props {\n  type?: \"text\" | \"number\" | \"email\" | \"password\";\n  placeholder?: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => any;\n  onEnter?: () => any;\n  \n  status?: \"normal\" | \"positive\" | \"warning\" | \"negative\";\n  width?: \"half\" | \"full\"; \n\n  caption?: string;\n  autoComplete?: string;\n}\n\nconst TextFieldWrapper: React.FC<Props> = ({\n  type = \"text\",\n  placeholder = \"\",\n  onChange,\n  onEnter,\n  status = \"normal\",\n  width = \"full\",\n  caption = \"\",\n  autoComplete,\n  ...props\n}) => {\n  return (<div className={`textfield_wrapper ${status} ${width}`} {...props}>\n    <TextField\n      grow\n      type={type}\n      placeholder={placeholder}\n      onChange={onChange}\n      onEnter={onEnter}\n      autoComplete={autoComplete}\n    />\n    <Caption>{caption}</Caption>\n  </div>);\n}\n\nexport default TextFieldWrapper;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './TextLink.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n\n  to?: string;\n  href?: string;\n\n  center?: boolean;\n}\n\nconst TextLink: React.FC<Props> = ({\n  children,\n\n  to,\n  href,\n\n  center = false,\n  ...props\n}) => {\n  if (to)\n    return (<Link to={to} className=\"textlink\" {...props}>\n      {children}\n    </Link>);\n  \n  return (<a href={href} className=\"textlink\" {...props}>\n    {children}\n  </a>);\n};\n\nexport default TextLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Btn.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  styleType?: \"primary\" | \"secondary\" | \"tertiary\";\n\n  to?: string;\n  href?: string;\n  onClick?: () => void;\n\n  grow?: boolean;\n  isSquare?: boolean;\n  disabled?: boolean;\n}\n\nconst Btn: React.FC<Props> = ({\n  children,\n  styleType = \"primary\",\n  to,\n  href,\n  grow = false,\n  isSquare = false,\n  disabled = false,\n  ...props\n}) => {\n  const classes: string[] = [ styleType ];\n  if (grow) classes.push(\"grow\");\n  if (isSquare) classes.push(\"square\");\n\n  if ((to && disabled) || (href && disabled)) {\n    classes.push(\"button disabled\");\n    return (<button className={classes.join(\" \")} disabled {...props}>\n      {children}\n    </button>)\n  } else if (to) {\n    classes.push(\"button\");\n    return (<Link to={to} className={classes.join(\" \")} {...props}>\n      {children}\n    </Link>);\n  } else if (href) {\n    classes.push(\"button\");\n    return (<a href={href} className={classes.join(\" \")} {...props}>\n      {children}\n    </a>);\n  }\n  return (<button className={classes.join(\" \")} disabled={disabled} {...props}>\n    {children}\n  </button>);\n}\n\nexport default Btn;\n","import axios from 'axios';\nimport { MeilingV1ExtendedAuthMethods, MeilingV1SigninType } from './interface/auth';\n\nconst server = 'https://meiling.stella-api.dev';\nconst tokenItemName = 'meiling-v1-token';\n\nexport async function getMeilingSessionToken(): Promise<string> {\n  let token = localStorage.getItem(tokenItemName);\n  \n  const data = (await axios.get(`${server}/v1/meiling/session`, {\n    headers: (token === null || token === undefined) ? undefined : {\n      'Authorization': `Bearer ${token}`,\n    }\n  })).data;\n\n  if (data.success) {\n    if (data.token !== null && data.token !== undefined) {\n      token = data.token as string;\n    }\n\n    if (token) {\n      localStorage.setItem(tokenItemName, token);\n      return token;\n    } else {\n      localStorage.removeItem(tokenItemName);\n      return await getMeilingSessionToken();\n    }\n\n  } else {\n    localStorage.removeItem(tokenItemName);\n    return await getMeilingSessionToken();\n  }\n}\n\nexport async function isUsernameAvailable(username: string) {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.post(`${server}/v1/meiling/signin`,\n    {\n      type: \"username_check\",\n      data: {\n        username,\n      }\n    }, \n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data;\n}\n\nexport async function signInWithUsernameAndPassword(username: string, password: string) {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.post(`${server}/v1/meiling/signin`,\n    {\n      type: \"username_and_password\",\n      data: {\n        username,\n        password,\n      }\n    }, \n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data;\n}\n\nexport async function getLoggedInUser(user_id?: string) {\n  if (!user_id) throw new Error('Nope');\n\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.get(`${server}/v1/meiling/users/${user_id}`,\n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data;\n}\n\nexport async function getLoggedInUsers() {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.get(`${server}/v1/meiling/users`,\n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data;\n}\n\nexport async function getExtendedAuthenticationMethods(\n  type: MeilingV1SigninType,\n  username?: string,\n) {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.post(`${server}/v1/meiling/signin`,\n    {\n      type,\n      context: (username) ? {\n        username,\n      } : undefined,\n    },\n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data.methods;\n}\n\nexport async function getExtendedAuthenticationChallenge(\n  type: MeilingV1SigninType,\n  method: MeilingV1ExtendedAuthMethods,\n  username?: string,\n) {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.post(`${server}/v1/meiling/signin`,\n    {\n      type,\n      context: (username) ? {\n        username,\n      } : undefined,\n      data: {\n        method,\n      }\n    },\n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data.challenge;\n}\n\nexport async function signout(uuid?: string) {\n  const token = await getMeilingSessionToken();\n\n  const data = (await axios.get(`${server}/v1/meiling/signout${uuid !== undefined ? `?uuid=${uuid}` : \"\"}`,\n    {\n      headers: (token === null || token === undefined) ? undefined : {\n        'Authorization': `Bearer ${token}`,\n    },\n  })).data;\n\n  return data;\n}\n\nexport function parseQueryUrl(url?: string) {\n  if (url === undefined) {\n    return [];\n  }\n\n  const searchQueries = url.split('?',2)[1];\n  const result: {name: string, value?: string}[] = [];\n\n  if (typeof searchQueries !== \"undefined\") {\n    const splitedQueries = searchQueries.split('&');\n\n    for (const query of splitedQueries) {\n      const parsed = query.split('=');\n      const name = parsed[0];\n      const value = parsed[1];\n\n      result.push({\n        name, value\n      });\n    }\n  }\n\n  return result;\n}\n","import { MeilingV1ErrorResponse, MeilingV1ErrorType } from \"./interface/error\";\n\n\nexport function parseMeilingV1ErrorResponse(e: any): MeilingV1ErrorResponse | undefined {\n  if (e.response) {\n    if (e.response.data) {\n      return e.response.data;\n    }\n  }\n  return undefined;\n}\n\nexport function getMessageFromMeilingV1Error(e?: MeilingV1ErrorResponse) {\n  if (e === undefined) {\n    return \"알 수 없는 오류가 발생했습니다.\";\n  }\n\n  switch (e.type) {\n    case MeilingV1ErrorType.ALREADY_SIGNED_IN:\n      return \"이미 로그인 되어 있습니다.\";\n    case MeilingV1ErrorType.ALREADY_SIGNED_OUT:\n      return \"이미 로그아웃 되어있습니다.\";\n    case MeilingV1ErrorType.AUTHENTICATION_NOT_CURRENT_CHALLENGE_METHOD:\n      return \"서버상의 인증시도와 이번 인증 시도가 일치하지 않습니다.\";\n    case MeilingV1ErrorType.AUTHENTICATION_REQUEST_NOT_GENERATED:\n      return \"정상적인 인증 시도가 생성되지 않았습니다.\";\n    case MeilingV1ErrorType.AUTHENTICATION_TIMEOUT:\n      return \"인증 제한시간이 초과되었습니다. 다시 시도하세요.\";\n    case MeilingV1ErrorType.INVALID_REQUEST:\n      return \"올바르지 않은 요청입니다.\";\n    case MeilingV1ErrorType.INVALID_SESSION:\n      return \"현재 세션이 올바르지 않습니다. 브라우저를 재시작 해 보세요.\";\n    case MeilingV1ErrorType.INVALID_SIGNIN_METHOD:\n      return \"지원하지 않는 인증 수단입니다.\";\n    case MeilingV1ErrorType.INVALID_SIGNIN_TYPE:\n      return \"지원하지 않는 로그인 방법입니다.\";\n    case MeilingV1ErrorType.MORE_THAN_ONE_USER_MATCHED:\n      return \"여러 계정에 해당되어, 로그인 할 수 없습니다. 아이디로 로그인해 보세요.\";\n    case MeilingV1ErrorType.NOT_IMPLMENETED:\n      return \"서버에서 아직 지원되지 않는 기능입니다.\";\n    case MeilingV1ErrorType.SIGNIN_FAILED:\n      return \"로그인을 실패했습니다.\";\n    case MeilingV1ErrorType.TWO_FACTOR_AUTHENTICATION_REQUEST_NOT_GENERATED:\n      return \"2차 인증 요청이 정상적으로 생성되지 않았습니다. 로그인을 다시 시도하세요.\";\n    case MeilingV1ErrorType.TWO_FACTOR_AUTHENTICATION_REQUIRED:\n      return \"2차 인증이 필요합니다.\";\n    case MeilingV1ErrorType.UNAUTHORIZED:\n      return \"접근 권한이 없습니다.\";\n    case MeilingV1ErrorType.UNSUPPORTED_SIGNIN_METHOD:\n      return \"지원 하지 않는 인증 수단입니다.\";\n    case MeilingV1ErrorType.WRONG_PASSWORD:\n      return \"비밀번호가 일치하지 않습니다.\";\n    case MeilingV1ErrorType.WRONG_USERNAME:\n      return \"아이디 또는 이메일이 일치하지 않습니다.\";\n    default:\n      return `알 수 없는 오류 (${e.type}) 이 발생했습니다: ${e.description}`\n  }\n}\n","import React, { Fragment, useState } from 'react';\n\nimport { RouteComponentProps } from 'react-router';\n\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport TextFieldWrapper from '../../molecules/TextFieldWrapper';\nimport TextLink from '../../atoms/TextLink';\nimport Btn from '../../atoms/Btn';\nimport './Signin.scss';\nimport { isUsernameAvailable } from '../../../common';\nimport { getMessageFromMeilingV1Error, parseMeilingV1ErrorResponse } from '../../../common/error';\n\ninterface Props extends RouteComponentProps {\n\n};\n\nconst SignIn: React.FC<Props> = ({ history, location }) => {\n  type textFieldStatusTypes = \"normal\" | \"positive\" | \"warning\" | \"negative\";\n  interface textFieldStatuses { \n    userId: {\n      status: textFieldStatusTypes;\n      message: string;\n    };\n  };\n\n\n  const [username, setUsername] = useState(\"\");\n  const [textFieldStatus, setTextFieldStatus] = useState<textFieldStatuses>({\n    userId: {\n      status: \"normal\",\n      message: \"\",\n    }\n  });\n\n  const checkUserId: () => Promise<void> = async () => {\n    let query;\n    try {\n      query = await isUsernameAvailable(username);\n    } catch(e) {\n      if (e.response) {\n        const result = parseMeilingV1ErrorResponse(e);\n        setTextFieldStatus({\n          userId: {\n            status: 'negative',\n            message: getMessageFromMeilingV1Error(result),\n          }\n        });\n      } else {\n        setTextFieldStatus({\n          userId: {\n            status: 'negative',\n            message: 'Meiling API 서버와의 통신에 실패 했습니다.',\n          }\n        });\n      }\n      \n      return;\n    }\n    \n    if (query.success) {\n      let state;\n\n      if (query.data) {\n        state = {\n          name: query.data.name,\n          username: username,\n          profileUrl: query.data.profileUrl === \"\" ? undefined : query.data.profileUrl,\n        }\n      } else {\n        state = {\n          username: username,\n        }\n      }\n\n      history.push({\n        pathname: \"/password\",\n        search: location.search,\n        state,\n      });\n    } else {\n      setTextFieldStatus({\n        userId: {\n          status: 'negative',\n          message: '사용자 이름이 존재하지 않습니다.',\n        }\n      });\n    }\n  }\n\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"signin\"\n        progressValue={1 / 3 * 100}\n        content={\n          <>\n            <TextFieldWrapper\n              type=\"text\"\n              status={textFieldStatus.userId.status}\n              onChange={(e) => {\n                setUsername(e.target.value);\n                setTextFieldStatus({\n                  userId: {\n                    status: 'normal',\n                    message: ''\n                  }\n                });\n              }}\n              onEnter={() => {\n                checkUserId();\n              }}\n              placeholder=\"아이디 또는 이메일을 입력하세요.\"\n              caption={textFieldStatus.userId.message}\n              autoComplete=\"username email\"\n            />\n            <TextLink to=\"signup\">계정이 없으신가요?</TextLink>\n          </>\n        }\n        buttonsBottom={[\n          <Btn key=\"button_socialsignin\" styleType=\"secondary\" to={`socialsignin${location.search}`}>소셜 계정으로 로그인</Btn>,\n          <Btn key=\"button_next\" onClick={checkUserId}>다음</Btn>\n        ]}\n      />\n    </Fragment>\n  );\n}\n\nexport default SignIn;\n","export enum MeilingV1SigninType {\n  USERNAME_CHECK = 'username_check',\n  USERNAME_AND_PASSWORD = 'username_and_password',\n  TWO_FACTOR_AUTH = 'two_factor_authentication',\n  PASSWORDLESS = 'passwordless',\n}\n\nexport enum MeilingV1ExtendedAuthMethods {\n  PGP_SIGNATURE = 'pgp_signature',\n  OTP = 'otp',\n  SMS = 'sms',\n  EMAIL = 'email',\n  SECURITY_KEY = 'security_key',\n}\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport { signout, parseQueryUrl } from '../../../common';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\nconst SignOut: React.FC<Props> = ({\n  location\n}) => {\n  const [loadState, setLoadState] = useState({\n    loaded: false,\n    error: false,\n  });\n\n  useEffect(() => {\n    if (!loadState.loaded) {\n      (async () => {\n        try {\n          let uuid = undefined;\n          let redirectTo = \"/\"\n          if (location.search) {\n            const parsedData = parseQueryUrl(location.search);\n            const uuidData = parsedData.find(n => n.name === \"uuid\");\n            const redirectData = parsedData.find(n => n.name === \"uuid\");\n\n            if (uuidData) {\n              uuid = uuidData.value;\n            }\n            if (redirectData && redirectData.value) {\n              redirectTo = redirectData.value;\n            }\n          }\n\n          await signout(uuid);\n          setLoadState({\n            loaded: true,\n            error: false,\n          });\n\n          window.location.href = redirectTo;\n        } catch(e) {\n          setLoadState({\n            loaded: true,\n            error: true,\n          });\n        }\n      })();\n    }\n  });\n\n  let content: JSX.Element | undefined;\n\n  if (!loadState.loaded) {\n    content = <>\n      <h1>로그아웃 하는 중 입니다.</h1>\n      <p>잠시만 기다려 주세요.</p>\n    </>;\n  } else if (loadState.error) {\n    content = <>\n      <h1>인증 서버와의 통신 중 장애가 발생했습니다.</h1>\n      <p>Meiling API 가 온라인인지 확인하세요.</p>\n    </>\n  }\n\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"index\"\n        progressValue={1 / 10 * 100}\n        content={\n          content ? content :\n              <Redirect to={`/${location.search}`} />\n        }\n        buttonsBottom={[]}\n      />\n    </Fragment>\n  );\n}\n\nexport default SignOut;\n","import React from 'react';\nimport './SocialBtn.scss';\n\ninterface Props {\n  children?: React.ReactNode;\n  platform?: string;\n  href?: string;\n}\n\nconst SocialBtn: React.FC<Props> = ({\n  children,\n  platform,\n  href,\n  ...props\n}) => {\n  return (<a className={`social-button ${platform}`} href={href} {...props}>\n    {children}\n  </a>);\n};\n\nexport default SocialBtn;\n","import React from 'react';\nimport SocialBtn from '../../atoms/SocialBtn';\nimport './SocialBtnsGroup.scss';\n\nconst SocialBtnsGroup: React.FC = () => {\n  return (\n    <div className=\"social-buttons-group\">\n      <SocialBtn platform=\"github\" href=\"#\">1</SocialBtn>\n      <SocialBtn platform=\"naver\" href=\"#\">1</SocialBtn>\n      <SocialBtn platform=\"kakao\" href=\"#\">1</SocialBtn>\n      <SocialBtn platform=\"google\" href=\"#\">1</SocialBtn>\n    </div>\n  );\n}\n\nexport default SocialBtnsGroup;\n","import React, { Fragment } from 'react';\n\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport Btn from '../../atoms/Btn';\nimport SocialBtnsGroup from '../../molecules/SocialBtnsGroup';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\nconst SocialSignIn: React.FC<Props> = ({\n  location,\n}) => {\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"socialsignin\"\n        progressDisabled\n        content={<SocialBtnsGroup />}\n        buttonsBottom={[\n          <Btn styleType=\"secondary\" to={`signin${location.search}`}>아이디나 이메일로 로그인</Btn>\n        ]}\n        buttonsBottomPosition=\"left\"\n      />\n    </Fragment>\n  );\n}\n\nexport default SocialSignIn;\n","import React from 'react';\nimport './ProfileImg.scss';\n\ninterface Props {\n  alt?: string;\n  src?: string;\n  size?: \"small\" | \"large\";\n}\n\nconst ProfileImg: React.FC<Props> = ({\n  alt = \"\",\n  src = \"\",\n  size = \"large\",\n  ...props\n}) => {\n  return (<img className={`profile_img ${size}`} src={src} alt={alt} {...props} />)\n}\n\nexport default ProfileImg;\n","import React from 'react';\nimport ProfileImg from '../../atoms/ProfileImg';\nimport './ProfileInfo.scss';\n\ninterface Props {\n  src?: string;\n  size?: \"small\" | \"large\";\n  msg?: string;\n  username?: string;\n}\n\nconst ProfileInfo: React.FC<Props> = ({\n  src = \"\",\n  size = \"large\",\n  msg,\n  username\n}) => {\n  const classes: string[] = [ \"profile_info\", size ];\n  if (msg) classes.push(\"msg\");\n\n  return (\n    <div className={classes.join(\" \")}>\n      <ProfileImg src={src} size={size}/>\n      {msg !== undefined ? <p className=\"msg\">{msg}</p> : <></>}\n      {username !== undefined ? <p className=\"username\">{username}</p> : <></>}\n    </div>\n  );\n}\n\nexport default ProfileInfo;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\n\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport ProfileInfo from '../../molecules/ProfileInfo';\nimport TextFieldWrapper from '../../molecules/TextFieldWrapper';\nimport TextLink from '../../atoms/TextLink';\nimport Btn from '../../atoms/Btn';\nimport './Password.scss';\nimport { signInWithUsernameAndPassword, parseQueryUrl } from '../../../common';\nimport { getMessageFromMeilingV1Error, parseMeilingV1ErrorResponse } from '../../../common/error';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { MeilingV1ErrorType } from '../../../common/interface/error';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\ninterface State {\n  name?: string;\n  username: string;\n  profileUrl?: string;\n};\n\nconst Password: React.FC<Props> = ({\n  location,\n  history,\n}) => {\n  type textFieldStatusTypes = \"normal\" | \"positive\" | \"warning\" | \"negative\";\n  interface textFieldStatuses { \n    password: {\n      status: textFieldStatusTypes,\n      message: string\n    } \n  };\n\n  const [password, setPassword] = useState(\"\");\n  const [textFieldStatus, setTextFieldStatus] = useState<textFieldStatuses>({\n    password: {\n      status: \"normal\",\n      message: \"\",\n    }\n  });\n\n  const name = (location.state as State)?.name;\n  const username = (location.state as State)?.username;\n  const profileUrl = (location.state as State)?.profileUrl;\n\n  if (!username) {\n    return <Redirect to={\"/signin\"}/>;\n  }\n\n  const checkPassword: () => Promise<void> = async () => {\n    let query;\n    try {\n      query = await signInWithUsernameAndPassword(username, password);\n    } catch(e) {\n      if (e.response) {\n        const result = parseMeilingV1ErrorResponse(e);\n        setTextFieldStatus({\n          password: {\n            status: 'negative',\n            message: getMessageFromMeilingV1Error(result),\n          }\n        });\n\n        if (result) {\n          if (result.type === MeilingV1ErrorType.TWO_FACTOR_AUTHENTICATION_REQUIRED) {\n            history.push({\n              pathname: \"/2fa\",\n              search: location.search,\n            });\n          }\n        }\n      } else {\n        setTextFieldStatus({\n          password: {\n            status: 'negative',\n            message: 'Meiling API 서버와의 통신에 실패 했습니다.',\n          }\n        });\n      }\n\n      return;\n    }\n    \n    if (query.success) {\n      const data = parseQueryUrl(location?.search);\n      const redirectUri = data.find(n => n.name === \"redirect_uri\");\n\n      let redirectTo = \"/\";\n\n      if (redirectUri && redirectUri.value) {\n        redirectTo = redirectUri.value;\n      }\n\n      window.location.href = redirectTo;\n    } else {\n      setTextFieldStatus({\n        password: {\n          status: 'negative',\n          message: '알 수 없는 오류가 발생했습니다.',\n        }\n      });\n    }\n  };\n\n  return (\n    <ContentWrapper\n      pageName=\"password\"\n      progressValue={2 / 3 * 100}\n      content={\n        <>\n          <ProfileInfo\n            size=\"large\"\n            src={`${(profileUrl !== undefined) ? profileUrl : \"https://placehold.it/128x128\"}`}\n            msg={`환영합니다.${(name !== undefined) ? ` ${name} 님.`:''}`}\n            username={username}\n          />\n\n          <input className=\"hidden\" autoComplete=\"username email\" value={username} readOnly />\n          <TextFieldWrapper\n            type=\"password\"\n            status={textFieldStatus.password.status}\n            onChange={e => {\n              setPassword(e.target.value);\n              setTextFieldStatus({password: { status: \"normal\", message: \"\"} });\n            }}\n            onEnter={checkPassword}\n            placeholder=\"비밀번호를 입력하세요.\"\n            caption={textFieldStatus.password.message}\n            autoComplete=\"password\"\n          />\n          <TextLink to=\"find-password\">비밀번호를 잊으셨나요?</TextLink>\n          <TextLink to=\"find-password\">비밀번호 없이 로그인합니다.</TextLink>\n        </>\n      }\n      buttonsBottom={[\n        <Btn styleType=\"secondary\" to={`signin${location.search}`}>이전</Btn>,\n        <Btn onClick={checkPassword}>다음</Btn>\n      ]}\n    />\n  );\n};\n\nexport default Password;\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport { getLoggedInUsers } from '../../../common/';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\nconst Index: React.FC<Props> = ({\n  location\n}) => {\n  const [loadState, setLoadState] = useState({\n    loaded: false,\n    loggedIn: false,\n    commsFailed: false,\n  });\n\n  useEffect(() => {\n    if (!loadState.loaded) {\n      (async () => {\n        try {\n          const data = await getLoggedInUsers();\n          setLoadState({\n            loaded: true,\n            loggedIn: (data) ? data.length > 0 : false,\n            commsFailed: false,\n          });\n        } catch(e) {\n          if (e.response) {\n            setLoadState({\n              loaded: true,\n              loggedIn: false,\n              commsFailed: false,\n            });\n          } else {\n            setLoadState({\n              loaded: false,\n              loggedIn: false,\n              commsFailed: true,\n            });\n          }\n        }\n      })();\n    }\n  });\n\n  if (loadState.loaded) {\n    \n    if (loadState.loggedIn) {\n      return <Redirect to={`/users${location.search}`} />\n    } else {\n      return <Redirect to={`/signin${location.search}`} />\n    }\n\n  } else {\n\n    return (\n      <Fragment>\n        <ContentWrapper\n          pageName=\"index\"\n          progressValue={1 / 10 * 100}\n          content={\n            (loadState.commsFailed) ?\n            <>\n              <h1>인증 서버와의 통신 중 장애가 발생했습니다.</h1>\n              <p>Meiling API 가 온라인인지 확인하세요.</p>\n            </>\n            :\n            <>\n              <h1>인증 서버와 통신 중 입니다.</h1>\n              <p>잠시만 기다려 주세요.</p>\n            </>\n          }\n          buttonsBottom={[]}\n        />\n      </Fragment>\n    );\n\n  }\n}\n\nexport default Index;\n","import React, { Fragment } from 'react';\n\nimport { getMeilingSessionToken } from '../../../common/';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport Btn from '../../atoms/Btn';\nimport './TestMode.scss';\nimport { RouteComponentProps } from 'react-router-dom';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\nconst TestMode: React.FC<Props> = () => {\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"testmode\"\n        progressValue={1 / 10 * 100}\n        content={\n          <>\n            <h1>테스트 모드</h1>\n            <p>테스트 모드에 접속하셨습니다.</p>\n\n            <h2>접속 가능한 페이지</h2>\n            <div className='btn_column_wrapper'>\n              <Btn to=\"signin\" grow styleType=\"secondary\">로그인</Btn>\n              <Btn to=\"signout\" grow styleType=\"secondary\">로그아웃</Btn>\n              <Btn to=\"socialsignin\" grow styleType=\"secondary\">소셜 계정으로 로그인</Btn>\n              <Btn onClick={async () => {\n                const localToken = localStorage.getItem('meiling-v1-token');\n                try {\n                  const token = await getMeilingSessionToken();\n                  alert(`localStorage: ${localToken}\n\nserverVersion: ${token}\nisNewToken: ${token !== localToken}`);\n\n                  const copyToClipboard = window.confirm(\"클립보드로 복사할까요?\");\n                  if (copyToClipboard) {\n                    navigator.clipboard.writeText(token);\n                    alert(\"클립보드로 복사되었습니다!\");\n                  }\n                } catch (e) {\n                  alert(\"Meiling API 서버와 통신에 실패 했습니다!\");\n                }\n              }} grow styleType=\"secondary\">메이링 서버 세션토큰 발급 테스트</Btn>\n              <Btn href=\"https://github.com/Stella-IT/meiling-dev.stella-it.com\" grow styleType=\"secondary\">깃허브 레포지토리 접속</Btn>\n            </div>\n          </>\n        }\n        buttonsBottom={[\n          <Btn key=\"button_developers\" styleType=\"secondary\" href=\"https://opensource.stella-it.com/developers/\">개발자 리소스</Btn>,\n          <Btn key=\"button_signin\" to=\"signin\">로그인</Btn>\n        ]}\n      />\n    </Fragment>\n  );\n}\n\nexport default TestMode;\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport { getLoggedInUsers } from '../../../common';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport Btn from '../../atoms/Btn';\n\ninterface Props extends RouteComponentProps {\n  \n};\n\nconst Users: React.FC<Props> = ({\n  location\n}) => {\n  const [loadState, setLoadState] = useState({\n    loaded: false,\n    error: false,\n    users: [],\n  });\n\n  useEffect(() => {\n    if (!loadState.loaded) {\n      (async () => {\n        try {\n          const users = await getLoggedInUsers();\n          setLoadState({\n            loaded: true,\n            error: false,\n            users,\n          });\n        } catch(e) {\n          setLoadState({\n            loaded: true,\n            error: true,\n            users: [],\n          });\n        }\n      })();\n    }\n  });\n\n  let content: JSX.Element | undefined;\n\n  if (!loadState.loaded) {\n    content = <>\n      <h1>계정 정보를 불러오는 중 입니다.</h1>\n      <p>잠시만 기다려 주세요.</p>\n    </>;\n  } else if (loadState.error) {\n    content = <>\n      <h1>인증 서버와의 통신 중 장애가 발생했습니다.</h1>\n      <p>Meiling API 가 온라인인지 확인하세요.</p>\n    </>\n  }\n\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"index\"\n        progressValue={1 / 10 * 100}\n        content={\n          content ? content :\n            loadState.users.length > 0 ? \n              <>\n                <h1>계정 선택</h1>\n                <p>본 계정 선택 화면은 최종본이 아닙니다.</p>\n                {loadState.users.map((user: any) => <Btn to={`/users/${user.id}`} styleType=\"secondary\" grow>{user.name}</Btn>)}\n                <Btn grow to={`/signin${location.search}`} styleType=\"tertiary\">새로운 계정 추가</Btn>\n                <Btn grow to={`/signout?redirect_uri=${window.location.href}`} styleType=\"tertiary\">로그아웃</Btn>\n              </> : \n              <Redirect to={`/signin${location.search}`} />\n        }\n        buttonsBottom={[]}\n      />\n    </Fragment>\n  );\n}\n\nexport default Users;\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport { getLoggedInUser } from '../../../common';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport ProfileInfo from '../../molecules/ProfileInfo';\n\ninterface UserInfoState {\n  user_id?: string;\n}\n\ninterface Props extends RouteComponentProps<{\n  user_id?: string\n}> {\n  \n};\n\nconst UserInfo: React.FC<Props> = ({\n  location,\n  match\n}) => {\n  const [loadState, setLoadState] = useState({\n    loaded: false,\n    error: false,\n    user: undefined,\n  });\n\n  const state = location.state as UserInfoState;\n  const user_id = state?.user_id ? state?.user_id : match.params?.user_id;\n\n  useEffect(() => {\n    if (!loadState.loaded) {\n      (async () => {\n        try {\n          const user = await getLoggedInUser(user_id);\n          setLoadState({\n            loaded: true,\n            error: false,\n            user: user,\n          });\n        } catch(e) {\n          setLoadState({\n            loaded: true,\n            error: true,\n            user: undefined,\n          });\n        }\n      })();\n    }\n  });\n\n\n  if (!user_id) {\n    return <Redirect to={\"/\"}/>;\n  }\n\n  let content: JSX.Element | undefined;\n\n  if (!loadState.loaded) {\n    content = <>\n      <h1>계정 정보를 불러오는 중 입니다.</h1>\n      <p>잠시만 기다려 주세요.</p>\n    </>;\n  } else if (loadState.error) {\n    content = <>\n      <h1>인증 서버와의 통신 중 장애가 발생했습니다.</h1>\n      <p>Meiling API 가 온라인인지 확인하세요.</p>\n    </>\n  }\n\n  const user = loadState.user as any;\n\n  return (\n    <Fragment>\n      <ContentWrapper\n        pageName=\"index\"\n        progressValue={1 / 10 * 100}\n        content={\n          content ? content :\n            user ? \n              <>\n                <ProfileInfo\n                  size=\"large\"\n                  src={`${(user.profileUrl !== undefined) ? user.profileUrl : \"https://placehold.it/128x128\"}`}\n                  msg={`${(user.name !== undefined) ? ` ${user.name}`:''}`}\n                  username={user.username}\n                />\n                <p>계정 생성 일자: {user.createdAt}</p>\n                <p>계정 로그인 일자: {user.lastSignIn}</p>\n                <p>계정 인증 일자: {user.lastAuthenticated}</p>\n\n              </> : \n              <Redirect to={`/`} />\n        }\n        buttonsBottom={[]}\n      />\n    </Fragment>\n  );\n}\n\nexport default UserInfo;\n","import { MeilingV1ExtendedAuthMethods } from \"./interface/auth\";\n\nexport function getMessageFromAuthenticationMethod(method?: MeilingV1ExtendedAuthMethods) {\n  if (method === undefined) {\n    return \"알 수 없는 수단\";\n  }\n\n  switch (method) {\n    case MeilingV1ExtendedAuthMethods.EMAIL:\n      return \"이메일\";\n    case MeilingV1ExtendedAuthMethods.OTP:\n      return \"OTP\";\n    case MeilingV1ExtendedAuthMethods.PGP_SIGNATURE:\n      return \"PGP 전자서명\";\n    case MeilingV1ExtendedAuthMethods.SECURITY_KEY:\n      return \"보안키\";\n    case MeilingV1ExtendedAuthMethods.SMS:\n      return \"문자\";\n    default:\n      return `알 수 없는 수단 (${method})`\n  }\n}\n","import React, { Fragment, useState, useEffect } from 'react';\n\nimport { getExtendedAuthenticationChallenge, getExtendedAuthenticationMethods } from '../../../common';\nimport ContentWrapper from '../../templates/ContentWrapper';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Btn from '../../atoms/Btn';\nimport { MeilingV1ExtendedAuthMethods, MeilingV1SigninType } from '../../../common/interface/auth';\nimport { getMessageFromAuthenticationMethod} from '../../../common/auth';\nimport { getMessageFromMeilingV1Error, parseMeilingV1ErrorResponse } from '../../../common/error';\n\ninterface Props extends RouteComponentProps<{\n  method: MeilingV1ExtendedAuthMethods;\n}> {\n  \n};\n\nconst TwoFactor: React.FC<Props> = ({\n  history,\n  location,\n  match,\n}) => {\n  const [loadState, setLoadState] = useState<{\n    loaded: boolean;\n    error?: string | boolean;\n    methods?: [];\n    challenge?: string;\n  }>({\n    loaded: false,\n    error: undefined,\n    methods: [],\n    challenge: undefined,\n  });\n  const [authMethod, setAuthMethod] = useState<MeilingV1ExtendedAuthMethods|undefined>(match.params.method);\n\n  useEffect(() => {\n    if (!loadState.loaded) {\n      if (!authMethod) {\n        (async () => {\n          try {\n            const methods = await getExtendedAuthenticationMethods(\n              MeilingV1SigninType.TWO_FACTOR_AUTH,\n            );\n            setLoadState({\n              loaded: true,\n              error: undefined,\n              methods,\n              challenge: undefined,\n            });\n          } catch(e) {\n            const data = parseMeilingV1ErrorResponse(e);\n            if (data) {\n              setLoadState({\n                loaded: true,\n                error: getMessageFromMeilingV1Error(data),\n                methods: [],\n                challenge: undefined,\n              });\n            } else {\n              setLoadState({\n                loaded: true,\n                error: true,\n                methods: [],\n                challenge: undefined,\n              });\n            }\n          }\n        })();\n      } else {\n        (async () => {\n          try {\n            const challenge = await getExtendedAuthenticationChallenge(\n              MeilingV1SigninType.TWO_FACTOR_AUTH,\n              authMethod,\n            );\n            setLoadState({\n              loaded: true,\n              error: false,\n              methods: [],\n              challenge: challenge,\n            });\n          } catch(e) {\n            const data = parseMeilingV1ErrorResponse(e);\n            if (data) {\n              setLoadState({\n                loaded: true,\n                error: getMessageFromMeilingV1Error(data),\n                methods: [],\n                challenge: undefined,\n              });\n            } else {\n              setLoadState({\n                loaded: true,\n                error: true,\n                methods: [],\n                challenge: undefined,\n              });\n            }\n          }\n        })();\n      }\n    }\n  });\n\n  let content: JSX.Element | undefined;\n\n  if (!loadState.loaded) {\n    content = <>\n      <h1>2차 인증 정보를 불러오는 중 입니다.</h1>\n      <p>잠시만 기다려 주세요.</p>\n    </>;\n  } else if (loadState.error) {\n    if (loadState.error === true) {\n      content = <>\n        <h1>인증 서버와의 통신 중 장애가 발생했습니다.</h1>\n        <p>Meiling API 가 온라인인지 확인하세요.</p>\n      </>\n    } else {\n      content = <>\n        <h1>오류 발생!</h1>\n        <p>{loadState.error}</p>\n      </>\n    }\n  }\n\n  if (content) {\n    return (\n      <Fragment>\n        <ContentWrapper\n          pageName=\"index\"\n          progressValue={1 / 10 * 100}\n          content={content}\n          buttonsBottom={[]}\n        />\n      </Fragment>\n    );\n  }\n\n  if (authMethod) {\n    return (\n      <Fragment>\n        <ContentWrapper\n          pageName=\"index\"\n          progressValue={1 / 10 * 100}\n          content={\n              <>\n                <h1>2차 인증</h1>\n                <h2>{getMessageFromAuthenticationMethod(authMethod)}</h2>\n                <p>{loadState.challenge}</p>\n              </>\n          }\n          buttonsBottom={[]}\n        />\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        <ContentWrapper\n          pageName=\"index\"\n          progressValue={1 / 10 * 100}\n          content={\n            loadState.methods && loadState.methods?.length > 0 ? \n                <>\n                  <h1>2차 인증</h1>\n                  <p>이 계정은 2차 인증으로 보호되어 있습니다. 인증하실 수단을 선택하세요. (본 2차 인증 화면은 최종본이 아닙니다.)</p>\n                  {loadState.methods?.map((method: MeilingV1ExtendedAuthMethods) => <Btn onClick={() => {\n                    setAuthMethod(method);\n                    setLoadState({\n                      loaded: false,\n                      error: false,\n                      methods: [],\n                      challenge: undefined,\n                    })\n                  }} styleType=\"secondary\" grow>{getMessageFromAuthenticationMethod(method)}</Btn>)}\n                </> : \n                <>\n                  <h1>오류 발생!</h1>\n                  <p>이 계정의 2차 인증이 활성화 되어있지만, 사용 할 수 있는 2차 인증 수단이 존재하지 않습니다.</p>\n                  <p>로그인을 더 이상 진행 할 수 없습니다. 계정의 수동 복구가 필요합니다.</p>\n                  <p>Meiling API 운영자에게 문의하세요.</p>\n                </>\n          }\n          buttonsBottom={[]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default TwoFactor;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './style/_reset.scss';\nimport './style/_config.scss';\nimport './style/_transition.scss';\n\nimport LogoImg from './components/atoms/LogoImg';\nimport SignIn from './components/pages/SignIn';\nimport SignOut from './components/pages/SignOut';\nimport SocialSignIn from './components/pages/SocialSignIn';\nimport Password from './components/pages/Password';\nimport Index from './components/pages/Index';\nimport TestMode from './components/pages/TestMode';\nimport Users from './components/pages/Users';\nimport UserInfo from './components/pages/UserInfo';\nimport TwoFactor from './components/pages/TwoFactor';\n\nfunction App() {\n  \n  const darkThemeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const isDarkMode = () => darkThemeMediaQuery.matches;\n  \n  const [theme, setTheme] = useState(isDarkMode() ? \"dark\" : \"light\");\n\n  darkThemeMediaQuery.addEventListener(\"change\", () => {\n    setTheme(isDarkMode() ? \"dark\" : \"light\");\n  });\n\n  useEffect(() => {\n    if (theme === \"dark\") {\n      document.body.classList.remove(\"theme-light\");\n      document.body.classList.add(\"theme-dark\");\n    } else {\n      document.body.classList.remove(\"theme-dark\");\n      document.body.classList.add(\"theme-light\");\n    }\n  });\n\n  return (\n    <Fragment>\n      <LogoImg />\n      <Router>\n        \n        <Route render={({location}) => {\n          console.log(location.key);\n          return (\n            <TransitionGroup>\n              <CSSTransition key={location.key} timeout={400} classNames=\"page\">\n\n                <Switch location={location}>\n                  <Route exact path=\"/\" component={Index} />\n                  <Route exact path=\"/signin\" component={SignIn} />\n                  <Route exact path=\"/signout\" component={SignOut} />\n                  <Route exact path=\"/socialsignin\" component={SocialSignIn} />\n                  <Route exact path=\"/password\" component={Password} />\n                  <Route exact path=\"/testmode\" component={TestMode} />\n                  <Route exact path=\"/users\" component={Users} />\n                  <Route exact path=\"/users/:user_id\" component={UserInfo} />\n                  <Route exact path=\"/2fa\" component={TwoFactor} />\n                  <Route exact path=\"/2fa/:method\" component={TwoFactor} />\n                </Switch>\n\n              </CSSTransition>\n            </TransitionGroup>\n          )\n        }} />\n        \n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}